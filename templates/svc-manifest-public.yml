# The manifest for the "web" service.
# Read the full specification for the "Load Balanced Web Service" type at:
#  https://aws.github.io/copilot-cli/docs/manifest/lb-web-service/

# Your service name will be used in naming your resources like log groups, ECS services, etc.
name: {{ name }}
type: Load Balanced Web Service

# Distribute traffic to your service.
http:
  # Requests to this path will be forwarded to your service.
  # To match all requests you can use the "/" path.
  path: '/'
  # You can specify a custom health check path. The default is "/".
  # healthcheck: '/'
  healthcheck:
    {%- if ipfilter %}
    {% else %}
    {% endif -%}
    path: '/'
    port: 8080
    success_codes: '200'
    healthy_threshold: 3
    unhealthy_threshold: 2
    interval: 35s
    timeout: 30s
    grace_period: 90s

sidecars:
  envoy:
    port: 443
    image: aws_account_id.dkr.ecr.us-west-2.amazonaws.com/envoy-proxy-with-selfsigned-certs:v1
{% if ipfilter %}
#   ipfilter:
#     port: 8080
#     image: public.ecr.aws/h0i0h2o7/uktrade/ip-filter:latest
#     variables:
#       PORT: 8080
#       EMAIL_NAME: 'the Department for International Trade WebOps team'
#       EMAIL: test@test.test
#       LOG_LEVEL: DEBUG
#       ORIGIN_HOSTNAME: localhost:7999
#       ORIGIN_PROTO: http
#       CONFIG_FILE: 's3://ipfilter-config/ROUTES.yaml'
{% endif %}

# Configuration for your containers and service.
image:

  location: {{ image_location }}
    # Port exposed through your container to route traffic to it.
  port: 8080

cpu: 256       # Number of CPU units for the task.
memory: 1024 # Amount of memory in MiB used by the task.
count: 1       # Number of tasks that should be running in your service.
exec: true     # Enable running commands in your container.
network:
  connect: true # Enable Service Connect for intra-environment traffic between services.

# storage:
  # readonly_fs: true       # Limit to read-only access to mounted root filesystems.

# Optional fields for more advanced use-cases.
#
variables:                    # Pass environment variables as key value pairs.
  {%- if ipfilter %}
  {% else %} # service container will listen on different port if we have an ip filter
  {% endif -%}
  PORT: 8080
  {%- for envvar, value in env_vars %}
  {{ envvar }}:
  {% endfor %}


{% if secrets %}
secrets:                      # Pass secrets from AWS Systems Manager (SSM) Parameter Store.
  {%- for secret, value in secrets.items() -%}
  {{ secret }}: /copilot/${COPILOT_APPLICATION_NAME}/${COPILOT_ENVIRONMENT_NAME}/secrets/{{ value }}
  {% endfor -%}
{% else %}
# secrets:                      # Pass secrets from AWS Systems Manager (SSM) Parameter Store.
{% endif %}

# You can override any of the values defined above by environment.
environments:
  {%- for env_name, env in environments.items() %}
  {{ env_name }}:
    http:
      alias: {{ env.url }}
      {%- if env.ipfilter %}
      #targetContainer: 'ipfilter'    # ip filter disabled
      {%- endif -%}
  {%- endfor -%}
